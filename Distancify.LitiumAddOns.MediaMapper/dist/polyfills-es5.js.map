{"version":3,"sources":["C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/@angular-devkit/build-angular/src/angular-cli-files/models/es5-jit-polyfills.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/es/date/index.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/es/math/index.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/es/number/index.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/es/reflect/index.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/es/regexp/index.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/es/symbol/index.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/internals/bind-context.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/internals/forced-string-html-method.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/internals/forced-string-trim-method.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/internals/function-to-string.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/internals/hide.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/internals/parse-float.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/internals/parse-int.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/internals/sloppy-array-method.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/internals/user-agent.js","C:/Development/AddOns/Distancify.LitiumAddOns.MediaMapper/node_modules/core-js/internals/wrapped-well-known-symbol.js"],"names":["path","module","exports","Date","Math","Number","Reflect","Symbol","aFunction","fn","that","length","undefined","call","a","b","c","apply","arguments","fails","METHOD_NAME","test","toLowerCase","split","whitespaces","name","shared","Function","toString","DESCRIPTORS","definePropertyModule","createPropertyDescriptor","object","key","value","f","global","trim","nativeParseFloat","parseFloat","FORCED","Infinity","string","trimmedString","String","result","charAt","nativeParseInt","parseInt","hex","radix","S","argument","method","getBuiltIn"],"mappings":"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","file":"polyfills-es5.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport 'core-js/es/reflect';\n","require('../../modules/es.date.now');\nrequire('../../modules/es.date.to-json');\nrequire('../../modules/es.date.to-iso-string');\nrequire('../../modules/es.date.to-string');\nrequire('../../modules/es.date.to-primitive');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Date;\n","require('../../modules/es.math.acosh');\nrequire('../../modules/es.math.asinh');\nrequire('../../modules/es.math.atanh');\nrequire('../../modules/es.math.cbrt');\nrequire('../../modules/es.math.clz32');\nrequire('../../modules/es.math.cosh');\nrequire('../../modules/es.math.expm1');\nrequire('../../modules/es.math.fround');\nrequire('../../modules/es.math.hypot');\nrequire('../../modules/es.math.imul');\nrequire('../../modules/es.math.log10');\nrequire('../../modules/es.math.log1p');\nrequire('../../modules/es.math.log2');\nrequire('../../modules/es.math.sign');\nrequire('../../modules/es.math.sinh');\nrequire('../../modules/es.math.tanh');\nrequire('../../modules/es.math.to-string-tag');\nrequire('../../modules/es.math.trunc');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Math;\n","require('../../modules/es.number.constructor');\nrequire('../../modules/es.number.epsilon');\nrequire('../../modules/es.number.is-finite');\nrequire('../../modules/es.number.is-integer');\nrequire('../../modules/es.number.is-nan');\nrequire('../../modules/es.number.is-safe-integer');\nrequire('../../modules/es.number.max-safe-integer');\nrequire('../../modules/es.number.min-safe-integer');\nrequire('../../modules/es.number.parse-float');\nrequire('../../modules/es.number.parse-int');\nrequire('../../modules/es.number.to-fixed');\nrequire('../../modules/es.number.to-precision');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Number;\n","require('../../modules/es.reflect.apply');\nrequire('../../modules/es.reflect.construct');\nrequire('../../modules/es.reflect.define-property');\nrequire('../../modules/es.reflect.delete-property');\nrequire('../../modules/es.reflect.get');\nrequire('../../modules/es.reflect.get-own-property-descriptor');\nrequire('../../modules/es.reflect.get-prototype-of');\nrequire('../../modules/es.reflect.has');\nrequire('../../modules/es.reflect.is-extensible');\nrequire('../../modules/es.reflect.own-keys');\nrequire('../../modules/es.reflect.prevent-extensions');\nrequire('../../modules/es.reflect.set');\nrequire('../../modules/es.reflect.set-prototype-of');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Reflect;\n","require('../../modules/es.regexp.constructor');\nrequire('../../modules/es.regexp.to-string');\nrequire('../../modules/es.regexp.exec');\nrequire('../../modules/es.regexp.flags');\nrequire('../../modules/es.string.match');\nrequire('../../modules/es.string.replace');\nrequire('../../modules/es.string.search');\nrequire('../../modules/es.string.split');\n","require('../../modules/es.array.concat');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.symbol');\nrequire('../../modules/es.symbol.async-iterator');\nrequire('../../modules/es.symbol.description');\nrequire('../../modules/es.symbol.has-instance');\nrequire('../../modules/es.symbol.is-concat-spreadable');\nrequire('../../modules/es.symbol.iterator');\nrequire('../../modules/es.symbol.match');\nrequire('../../modules/es.symbol.match-all');\nrequire('../../modules/es.symbol.replace');\nrequire('../../modules/es.symbol.search');\nrequire('../../modules/es.symbol.species');\nrequire('../../modules/es.symbol.split');\nrequire('../../modules/es.symbol.to-primitive');\nrequire('../../modules/es.symbol.to-string-tag');\nrequire('../../modules/es.symbol.unscopables');\nrequire('../../modules/es.math.to-string-tag');\nrequire('../../modules/es.json.to-string-tag');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Symbol;\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var fails = require('../internals/fails');\n\n// check the existence of a method, lowercase\n// of a tag and escaping quotes in arguments\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    var test = ''[METHOD_NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  });\n};\n","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","var shared = require('../internals/shared');\n\nmodule.exports = shared('native-function-to-string', Function.toString);\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar nativeParseFloat = global.parseFloat;\nvar FORCED = 1 / nativeParseFloat(whitespaces + '-0') !== -Infinity;\n\n// `parseFloat` method\n// https://tc39.github.io/ecma262/#sec-parsefloat-string\nmodule.exports = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(String(string));\n  var result = nativeParseFloat(trimmedString);\n  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;\n} : nativeParseFloat;\n","var global = require('../internals/global');\nvar trim = require('../internals/string-trim').trim;\nvar whitespaces = require('../internals/whitespaces');\n\nvar nativeParseInt = global.parseInt;\nvar hex = /^[+-]?0[Xx]/;\nvar FORCED = nativeParseInt(whitespaces + '08') !== 8 || nativeParseInt(whitespaces + '0x16') !== 22;\n\n// `parseInt` method\n// https://tc39.github.io/ecma262/#sec-parseint-string-radix\nmodule.exports = FORCED ? function parseInt(string, radix) {\n  var S = trim(String(string));\n  return nativeParseInt(S, (radix >>> 0) || (hex.test(S) ? 16 : 10));\n} : nativeParseInt;\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !method || !fails(function () {\n    // eslint-disable-next-line no-useless-call,no-throw-literal\n    method.call(null, argument || function () { throw 1; }, 1);\n  });\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","exports.f = require('../internals/well-known-symbol');\n"],"sourceRoot":"webpack:///"}